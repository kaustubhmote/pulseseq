;hCH-hNH.2aq
;$COMMENT=Sequential acquisition of CH and NH
;$CLASS=Solids-CP
;$DIM=2D
;$TYPE=Multiple-Experiments
;$SUBTYPE=1H-detection

; #---Experiment
; 2A2E1R-[CH_f +/- NH_f]

; #---Reference
; Sharma et al. 2016, J Biomol NMR

; Note:  indirect sampling hardcoded to states-tppi

; Questions, Suggestions?
; kaustuberm [at] tifrh [dot] res [dot] in

; #---ZGOPTNS
; 1. -Dwacq: Windowed 1H acquisiton (Needs other settings as well: see below)
; 2. -Dhetdec: X-heteronuclear decoupling during 1H acquisition
;----------------------------------------------------------------------------

; #---Settings for Multiple Acquisition:
;l0: number of 15N-eidted experiments per 13C-edited experimnt (= 1-10)
;cnst13: SW(13C)/SW(15N) (= 1-10)
;NBL: 2

; #---------------------------------------------------------#
; #                                                         #
; #  Two acqs are obtained using 2 buffers, keep NBL=2      #
; #    Also use td1 = 2*(td1 you actually want to use)      #
; #    This will be internally compensated                  #
; #                                                         #
; #  For each 15N expt to be the same, input TD1 must       #
; #    be a multiple of 4*l0                                #
; #                                                         #
; #---------------------------------------------------------#

; #---pulses
;p1: 1H initial 90 deg pulse @ pl1
;p15: initial cp contact time
;p2:	90 deg pulse on X @ pl2
;p17: selective (short) CP from X to 1H	
; --------------------------------------
 
; #---power
;pl1: 1H, 90 pulse @ length p1
;pl2: C, 90 pulse @ length p2
;pl12: H, decoupling
;pl7: H, water suppression, usually 5-15 kHz
;pl8: C, decoupling
;pl9: N, decoupling
;sp0: H, initial CP to X, @ p15 (ramp)
;pl16:	C, initial CP from 1H, @ p15
;sp3: H, selective (short) CP from X to 1H @ p17 (ramp)
;pl17: C, selective (short) CP from X to 1H @ p17 
;pl18: N, selective (short) CP from X to 1H @ p18
;------------------------------------------------------

; #---delays
;d1: recycle delay
;d7: water suppression time
;d0: indirect evolution
;------------------------------

; #---shapes
;spnam0: linear ramp (eg ramp70100.1000)
;spnam4: linear ramp (eg ramp70100.1000)
;-----------------------------------------

; #---decoupling
;cpdprg7: H, water suppression (cw, missisipi, etc)
;cpdprg8: X, decoupling (waltz, garp, pi, etc)
;cpdprg2: H, decoupling (rCW-ApA, sw-TPPM)
;----------------------------------------------------

; #---loops and constants
;l11: 16
;cnst31: MAS freequency
;--------------------------

; #---windowed acquisition settings
;aqmod: analog
;l11: =anavpt =16 (this is optimal in most cases)
;d9: =1.6us, defined by l11 
;p5: 1H, pmlg pulse length of each phase
;p10: =10*p5 for m5m, 6*p5 for m3m
;d8: time to trun on receiver (0.1u - 1.6u)
;p9: Total window duration (3.0u-4.6us)
;count: loops for each supercycled pmlg, defined by aq and other pmlg settings
;Set SW = cnst16, make sure TD~count*4
;--------------------------------------------

; #---channels
# define H f1
# define C f2
# define N f3

; #---include files
#include <Avancesolids.incl>

# ifdef wacq
; #----for windowed 1H acquisition
#include <Delayssolids.incl>
; #----sampling delays
 "d9=0.1u*(l11)"
; #---part of the window
 define delay WINDOW
 "WINDOW=p9"
; #---pmlg pulses
 "p10=10*p5"
; #---part of WINDOW other than sampling
  define delay del
  "del =  WINDOW - d9 - d8 - 0.1u"
; #---pmlg cycle time (supercycled pmlg)
  define delay cycle
  "cnst16=1/(WINDOW + p10)"
; #---spectra width. manually set the sw to this number
  "cycle=2/cnst16"
; #---to define acq time
  define loopcounter count
  "count=aq/cycle"
; #---transmitter blanking
  "blktr2 = 0.7u"
; #---anavpt for analog mode sampling  
  "anavpt=l11"
# endif

; #---inbuilt delays
  "d60 = 0.1u"
  "d61 = 0.5u"
  "d62 = 1.0u"
  "d63 = 10u"

  define delay acquisition
  "acquisition = aq"

; #---indirect dimension settings
  "in0=inf1"
  define loopcounter ni
  "ni = td1/4"
  define delay t1evolution
  "t1evolution = ni*in0 + ni*cnst13*in0/l0"

; #---for rCW-ApA heteronuclear decoupling on 1H
  "p31 = (0.98/cnst31)*1s - p32/2"

; #---for multiple experiments
; #---indirect increment on 15N
  define delay dN
  "dN=0.1u"
  "d0=0.1u"
; #----variable to track of current 15N expt number
  define loopcounter nexptno
  "nexptno=0"
; #----increment counter set to zero initially
  "l4=0"

; #---reverse cp align (TODO: replace by ralign)
  "p19 = p18 + p3"
  "d17 = p19 - p2 - p17"
  "p14 = p15 - p3"
;--------------------------------------------------

; #---pulse seq starts
1 ze	
2 d60 do:C

; #---recycle delay
  d1 
  d63 st0
; #---determine 15N exptnumber
  "nexptno=(l4)/(ni/l0)"
; #---calculate 15N evolution time
  "dN=cnst13*(d0-nexptno*in0*ni/l0)"
  if "dN < 1u"
  {
  "dN = 0.1u"
  }

; #---check settings
# ifdef wacq 
  if "TD+128 < count*4" goto ErrTD
# endif
  if "acquisition > 50m" goto ErrAq
  if "(p15 + p17) > 15m" goto ErrCP
  if "(acquisition + p15 + d7 + t1evolution + p19 + p1 + 2*p2 + 2*p3) > 0.1*d1" goto ErrDuty
  if "td1 % 4*l0 != 0" goto ErrTD1	

# ifdef wacq
  10u reset1:H 	
  STARTADC				
  RESETPHASE			
  1u rpp10				
# endif

; #---first 90 at pl1
  d62 pl1:H pl16:C pl17:N	
  (p1 ph1):H 					

; #---sim cp
 (p15:sp0 ph20):H (p15 ph16):C (p14 ph17 p3 pl3 ph21):N

; #---indirect evolution
  d61 pl12:H
  d60 cpds2:H
  (d0 p2 pl2 ph23):C 
  d60 do:H

; #---Water Suppression
  d61 pl7:H			
  d60 cpds7:H		
  d7								
  d60 do:H

; #---reverse cp 
  (p2 ph21):C
	(p16:sp4 ph18):H (p16 pl16 ph20):C

; #---detect
# ifdef wacq
4 del 											
	d8 RG_ON								
  d9 sample								
  (p10:sp1  ph10^):H			
  del 
	d8 RG_ON
  d9 sample
  (p10:sp1  ph10^):H
  lo to 4 times count             
  d62 eoscnp 								
# else
#   ifdef hetdec
    d61 pl8:C
    d60 cpds8:C
    goscnp
    d60 do:C
#   else
    goscnp
#   endif
# endif

; #---indirect evolution
  d61 pl12:H
  d60 cpds2:H
  (p3 pl3 ph11):N
  dN 
  d60 do:H

; #---reverse cp 
	(p17:sp5 ph18):H (p17 pl17 ph20):N

; #---detect
# ifdef wacq
4 del 											
	d8 RG_ON								
  d9 sample								
  (p10:sp1  ph10^):H			
  del 
	d8 RG_ON
  d9 sample
  (p10:sp1  ph10^):H
  lo to 4 times count             
  d62 rcyc=2 								
# else
#   ifdef hetdec
    d61 pl9:N
    d60 cpds9:N
    go=2 ph31 
    d60 do:N
#   else
    go=2 ph31
#   endif
# endif

; write to file
  1m wr #0 if #0 zd

; quadrature loop
  d62 ip16
  d62 ip11
  lo to 2 times 2

; increment loop
  id0 
  iu4
  lo to 2 times ni

  goto HaltAcqu

; #---Error Statements
ErrTD, d63
  print "TD << count * 4. SWH should be ~CNST16 for -Dwacq"
  goto HaltAcqu

ErrAq, d63
  print "Acquisition is too long. Please check"
  goto HaltAcqu

ErrCP, d63
 print "CP time is too long. Please check."
 goto HaltAcqu

ErrDuty, d63
 print "Duty Cycle > 10%. Please check or edit the pulse program"
 goto HaltAcqu

ErrTD1, d63
 print "TD1 must be multiple of 4*l5. Please check"
 goto HaltAcqu
;-----------------------------------------------------------------

HaltAcqu, d63
exit								

; #---phase tables 
; #---min=2, full=8
  ph1  = 1 3
  ph16 = 0 0 2 2 
  ph17 = 0 0 2 2   			 
  ph18 = 0 0 0 0 2 2 2 2 
  ph19 = 0
  ph10 = 0 2
  ph11 = 2 
  ph30 = 0
  ph31 = 0 2 2 0 2 0 0 2

  ph20 = 0 
  ph21 = 1
  ph22 = 2
  ph23 = 3  
; ----------------------
