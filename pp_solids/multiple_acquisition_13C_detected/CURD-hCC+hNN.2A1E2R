; CURD 2D-hCC + 2D-hNN  
; Setup Instructions
; this experiment uses 2 receivers 
; steps for setup: 
; 1. create new expt
; 2. edasp: f1=C, f2=N, f3=H 
; 3. create a child expt 
; 4. set up all parameters 
; 5. delete child expt 
; 6. create child expt (so that all parameters are correct) 
; 7. switch f1 and f2 in edasp 
; 8. run the parent experiment 

;zgoptns: -Drcwhp, -Drcwlp, (and more, check pp) 
; -Drcwhp, -Drcwlp, -Ddecoffset: options for decoupling 
; -Dlongaq, -Dlongct, -Dhighduty: probe protection 
; -Dsaturation: saturation pulses 

;#---parameters 
;p1: 1H 90 pulse @ pl1 
;p15: CP contact time 
;p11: X 90 pulse (with zgoptns=-Dcal90) 
;pl1: 1H 90 @ p1 us 
;pl15: X CP 
;sp0: 1H CP 
;pl11: X pulse power (zgoptns=-Dcal90) 
;pl12: decoupling power level 
;cnst12: (zgoptns=-Ddecoffset) change of offset for decoupling 
;cpdprg2: decoupling sequence 
;spnam0: ramp for CP on 1H 
;cnst31: MAS frequency 
;taur: =1/cnst31, rotor period [set internally] 
;d58: =1m [data transfer, channel switch] 
;d59: =200u [gradient recovery] 
;d60: =0.1u [decoupling on/off] 
;d61: =0.2u [power level change] 
;d62: =0.5u [frequency switch] 
;d63: =10u [buffer switch] 
;nbl: l5+2 
;l0: initial increment of first CC expt 
;l4: initial increment of last CC expt 
;l10: total number of increments in CC 
;l11 total number of increments in NN 
;l1: 15N expt tracker 
;l5: number of central CC expts. Total CC = l5+2 
;in0: for first and last CC expt 
;in4: for central CC expt 
;in2: for NN, = inf1*cnst10 
;d10: pdsd mixing for central CC expts 
;d1: recycle delay 
;p9: DARR/PDSD mixing for first CC 
;pl9: DARR power level on 1H; 0 for PDSD 
;p10: DARR mixing for last CC 
;pl10: DARR power level on 1H; 0 for PDSD 
;l14: number of incr to jump on the central block 

; #---channels 
# define H f3 
# define C f1 
# define N f2 

; #---default delays 
  "d58 = 1m" 
  "d59 = 200u" 
  "d60 = 0.1u" 
  "d61 = 0.5u" 
  "d62 = 1.0u" 
  "d63 = 10u" 

; #---misc 
  "acqt0 = d60" 
  define delay taur 
  "taur = 1s/cnst31" 

# ifdef rcwhp 
;p32: 180 deg pulse for rcw (high power) decoupling  
;p31: CW pulse for rCW-ApA decoupling (set internally) 
  "p31 = (0.98 * taur) - (0.5 * p32)" 
# endif 


; #---indirect dimension 
;ni: number of increments in indirect dimension  
  define loopcounter ni 
  "ni = td1 / (2 * (l5 + 2))" 
  "in0 = inf1" 
  "in4 = in0" 
  "in2 = inf1 * cnst10" 
  "d0 = l0 * in0 + 0.1u" 
  "d4 = l4 * in4 + 0.1u" 
  "d5 = l14 * in4" 
  "d6 = l14 * in4 * l5" 
  "d2 = 0.1u" 
  "l1 = 0" 

;t1C: indirect dimension 13C evolution time 
;t1N: indirect dimension 15N eolution time 
  define delay p90x 
  "p90x = max(p3, p2)" 

  define delay t1C 
  "t1C = d0 + ni * in0" 
  define delay t1N  
  "t1N = d2 + l11 * in2" 

  define delay t1Cfinal 
  "t1Cfinal = d0 + l10 * in0" 

  define delay t1max 
  "t1max = max(t1N, t1Cfinal) + 3 * p90x + 10u" 

; #---constant duty cyctle adjustments 
  "d30 = t1max - d0 - 3*p2" 
  "d29 = t1max - d2 - 3*p3"  
  "d40 = t1max - d4 - 3*p2" 
  
; include files 
#include <Avance.incl>  
#include <De2.incl>

; #------------------------# 
; #  pulse program starts  #
; #------------------------# 

Prepare, ze1 
  ze2 

; testing 
  t1max t1N t1C d5 d6 

Start, d58 

; #---------------------------#
; #  FIRST EXPERIMENT STARTS  # 
; #---------------------------#  

; #---inital power levels 
  d63 pl1:H pl15:C pl16:N 
  
; #---adjust 15N evolution time 
  if "l1 == l11" goto reset_N 
  goto dont_reset_N 
reset_N, d63 
  "l1 = 0" 
  "d2 = 0.1u" 
dont_reset_N, d63 

; #---constant time increment delays adjust 
  "d30 = t1max - d0 - 3*p2" 
  "d29 = t1max - d2 - 3*p3" 
  "d40 = t1max - d4 - 3*p2" 
  
  if "d0 > t1max" goto HaltAcqu 
  if "d2 > t1max" goto HaltAcqu 
  if "d4 > t1max" goto HaltAcqu 

; #---first buffer for receiver 1 
  d63 st01 

; recycle delay 
  d1 

; #---first 90 pulse 
  d63 fq=0:H 
  (p1 ph1):H

; #---cross polarization  
  (p15:sp0 ph20):H (p15 ph16):C (p15 ph17):N 

; #---t1 evolution 
  d60 pl12:H 
  d60 cpds2:H 
  (p2 pl2 ph23 d30 p2 pl2 ph21 d0 p2 pl2 ph11):C (p3 pl3 ph21 d29 p3 pl3 ph23 d2 p3 pl3 ph12):N 
  d60 do:H 

; #---mixing 1 
  (p9 pl9 ph20):H 

; #---bring back carbon 
  (p2 pl2 ph13):C 

; #---acquire 
  d60 pl12:H 
  d60 cpds2:H 
  ACQ_START1(ph30, ph31) 
  aq DWELL_GEN1 
  d60 do:H 
  eoscnp1 

; #----------------------------#
; #  MIDDLE EXPERIMENTS START  #
; #----------------------------#

middle_expt, d63 

; #---next buffer for receiver 1 
  d63 st1 

; #---constant duty calculation 
  "d40 = t1max - d4 - 3*p2" 

  if "d4 > t1max" goto HaltAcqu 

; #---set power levels for H and C 
  d63 pl1:H pl15:C 

; #---recycle delay 
  d1 

; #---first 90 pulse 
  d63 fq=0:H 
  (p1 ph1):H 

; #---cross polarization 
  (p15:sp0 ph20):H (p15 ph16):C 

; #---t1 evolution 
  d60 pl12:H 
  d60 cpds2:H 
  (p2 pl2 ph23 d40 p2 pl2 ph21 d4 p2 pl2 ph11):C 
  d60 do:H 

; #---mixing 1 
  d10 

; #---bring back carbon 
  (p2 pl2 ph13):C  

; #---acquire 
  d60 pl12:H 
  d60 cpds2:H 
  ACQ_START1(ph30, ph31)
  aq DWELL_GEN1 
  d60 do:H 
  eoscnp1 

; #---acquire a different t1 evolution point 

  "d4 = d4 + (l14 * in4)" 

  lo to middle_expt times l5 

; #--------------------------# 
; #  LAST EXPERIMENT STARTS  # 
; #--------------------------# 

; #---reset d4 
reset_d4, d60 
  "d4 = d4 - (l14 * in4)" 
  lo to reset_d4 times l5 

; #---recycle 
  d1 

; #---switch buffers for 13C experiment 
  d63 st1 

; #---set power levels 
  d63 pl1:H pl15:C 

; #---first 90 pulse 
  d63 fq=0:H 
  (p1 ph1):H 

; #---cross polarization  
  (p15:sp0 ph20):H (p15 ph16):C 

; #---t1 evolution 
  d60 pl12:H 
  d60 cpds2:H 
  (p2 pl2 ph23 d30 p2 pl2 ph21 d0 p2 pl2 ph11):C 
  d60 do:H 

; #---mixing 2 (DARR/PDSD) 
; (p10 pl10 ph20):H 
  d10 

; #---bring back carbon 
  (p2 pl2 ph13):C (p3 pl3 ph14):N 

; #---acquire 
  d60 pl12:H 
  d60 cpds2:H 
  ACQ_START_1_2(ph30, ph31, ph29) 
  aq DWELL_GEN2 DWELL_GEN1 
  d60 do:H 
  eoscnp1 
  eoscnp2 
  
  d63 ipp1 ipp16 ipp17 ipp11 ipp12 ipp13 ipp14 ipp31 ipp29 

; #---loop for ns number of scans 
  lo to Start times ns 

; #---write data 
  d58 wr1 #0 
  d58 wr2 #1 

; #---quadrature
  d63 if1 #0 
  d63 if2 #1  
  d63 zd1  
  d63 zd2
  d63 ip11 
  d63 ip12 
  lo to Check times 2 

; #---t1 increment
  id0 
  id2 
  id4 
  d63 iu1 
  lo to Check times ni 

; #---END 
HaltAcqu, d58  
exit 

;ns: min=4, full=8 [4*n, 8*n]
; #---phase tables 
   ph1 = 1 3 
  ph16 = 0 0 2 2   
  ph17 = 0 0 2 2 
  ph11 = 1 
  ph12 = 3 
  ph13 = 1 1 1 1 3 3 3 3 
  ph14 = 1 1 1 1 3 3 3 3 

  ph31 = 0 2 2 0 2 0 0 2 
  ph29 = 0 2 2 0 2 0 0 2 
  ph30 = 0 
  
  ph20 = 0  
  ph21 = 1 
  ph22 = 2 
  ph23 = 3    
